TERMINALY: int_lit dec_lit str_lit expression id

1   program : top_level_statement program;
2   program : epsilon;
3   top_level_statement : statement;
4   top_level_statement : function_definition;
5   iteration : "while" expression statement_block;
6   conditional : "if" expression statement_block "else" statement_block;
7   function_definition : "func" id "(" function_opt_param_list ")" return_type statement_block;
8   statement_block : "{" statements "}";
9   statements : statement statements;
10  statements : epsilon;
11  statement : variable_decl;
12  statement : assignment;
13  statement : conditional;
14  statement : iteration;
15  statement : return;
16  variable_decl : variable_decl_keyword id opt_var_type opt_init;
17  opt_var_type : ":" type;
18  opt_var_type : epsilon;
19  variable_decl_keyword : "let";
20  variable_decl_keyword : "var";
21  return_type : "->" type;
22  return_type : epsilon;
23  function_opt_param_list : function_param_list;
24  function_opt_param_list : epsilon;
25  function_param_list : function_param_def function_param_list_tail;
26  function_param_list_tail : "," function_param_list;
27  function_param_list_tail : epsilon;
28  function_param_def : function_param_name function_param_name ":" type;
29  function_param_name : id;
30  function_param_name : "_";
31  opt_init : "=" initialiser;
32  opt_init : epsilon;
33  return : "return" opt_expr;
34  opt_expr : expression;
35  opt_expr : epsilon;
36  type : type_key_word opt_question;
37  opt_question : "?";
38  opt_question : epsilon;
39  type_key_word : "Double";
40  type_key_word : "Int";
41  type_key_word : "String";
42  initialiser : expression;
43  initialiser : call;
44  assignment : id "=" expression;
46  term : id;
47  term : "nil";
48  term : int_lit;
49  term : dec_lit;
50  term : str_lit;
51  call : id "(" opt_call_param_list ")";
52  opt_call_param_list : call_parameter_list;
53  opt_call_param_list : epsilon;
54  call_parameter_list : call_parameter call_parameter_list_tail;
55  call_parameter_list_tail : "," call_parameter_list;
56  call_parameter_list_tail : epsilon;
57  call_parameter : id ":" expression
58  call_parameter : expression

// NELZE
//function_call : id "=" call;
//call_parameter : term | id ":" term; //NELZE
//statement : variable_definition | assignment | conditional | iteration | function_call | call | return;
